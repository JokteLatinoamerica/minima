<?xml version="1.0" encoding="UTF-8"?>
<project name="minima" default="build">

  <property file="./config/build.properties"/>
  <property file="./config/ftp.properties"/>

  <target name="clean">
    <echo message="Cleaning directories.." />
    <!-- delete the packages (it will be created again) -->
    <delete dir="packages" includeemptydirs="true" />
    <!-- delete the minima deploy dir (it will be created again) -->
    <delete dir="template" includeemptydirs="true" />
    <!-- delete the last generated package -->
    <delete file="pkg_minima.zip" />
  </target>

  <!-- Copy minima to a deploy dir (to strip the unncessary stuff) -->
  <target name="build">
    <antcall target="clean" />
    <echo message="Preparing deploy template folder.." />
    <mkdir dir="template" />
    <!-- copy everything -->
    <copy todir="template" failonerror="false" verbose="true">
      <fileset dir="../administrator/templates/minima">
        <exclude name=".git" />
      </fileset>
    </copy>
    <!-- call the concatenation -->
    <antcall target="concat" />
    <!-- call the minification task -->
    <antcall target="minify-css" />
    <antcall target="minify-js" />
    <!-- change links to point to the minified files -->
    <!-- <antcall target="update-links" /> -->
    <!-- delete unnecessary things -->
    <antcall target="strip" />
    <antcall target="pkg" />
  </target>

  <!-- Concatenate assets -->
  <target name="concat">
    <echo message="Concatenating Main JS files..." />
    <concat destfile="./template/js/minima-full.js">
      <fileset dir="./template/js/libs" includes="**/*.js" excludes="**/minima.colors.js" />
      <filelist dir="./template/js" files="minima.js" />
    </concat>
    <echo message="Concatenating Main CSS files..." />
    <concat destfile="./template/css/template-full.css">
      <fileset dir="./template/css/libs" includes="**/*.css" />
      <filelist dir="./template/css" files="template.css" />
    </concat>
  </target>

  <!-- Minify CSS -->
  <target name="minify-css">
    <apply executable="java" parallel="false">
      <fileset dir="./template/css/" includes="template-full.css" />
      <arg line="-jar"/>
      <arg path="./tools/yuicompressor-2.4.5.jar"/>
      <srcfile/>
      <arg line="-o"/>
      <mapper type="merge" to="./template/css/template.min.css" />
      <targetfile/>
    </apply>
  </target>

  <!-- Minify JS -->
  <target name="minify-js" depends="clean-js">
    <apply executable="java" parallel="false">
      <fileset dir="./template/js/" includes="minima-full.js" />
      <arg line="-jar"/>
      <arg path="./tools/yuicompressor-2.4.5.jar"/>
      <srcfile/>
      <arg line="-o"/>
      <mapper type="merge" to="./template/js/minima.min.js" />
      <targetfile/>
    </apply>
  </target>

  <!-- <target name="update-links">
    <echo message="removing javascript sources.." />
    <replaceregexp match="/{([^}]+)}/gs" replace="">
        <fileset dir="./template" includes="index.php"/>
    </replaceregexp>
    <replaceregexp match="/{source}" replace="">
        <fileset dir="./template" includes="index.php"/>
    </replaceregexp>
    <echo message="updating javascript links.." />    
    <replaceregexp match="minima.js" replace="minima.min.js" flags="g">
        <fileset dir="./template" includes="index.php"/>
    </replaceregexp>
    <echo message="updating css links.." />    
    <replaceregexp match="template.css" replace="template.min.js" flags="g">
        <fileset dir="./template" includes="index.php"/>
    </replaceregexp>
    <echo message="" />
  </target> -->

  <!-- delete all the unnecessary unminified files -->
  <target name="strip">
    <delete dir="./template/css/libs"/>
    <delete dir="./template/js/libs"/>
    <!-- rename files -->
  </target>

  <target name="imagespng">
        <echo message="Optimizing images..."/>
        <if>
            <and>
                <os family="unix" />
                <available file="optipng" filepath="${ENV.PATH}" />
            </and>
            <then>
                <!-- work around https://sourceforge.net/tracker/?func=detail&aid=2671422&group_id=151404&atid=780916 -->
                <delete>
                    <fileset dir="./${dir.publish}/${dir.images}/">
                        <include name="**/*.png"/>
                    </fileset>
                </delete>
                <apply executable="optipng" dest="./${dir.publish}/${dir.images}/" osfamily="unix">
                    <fileset dir="./${dir.source}/${dir.images}/" includes="**/*.png"  excludes="${images.bypass}, ${images.default.bypass}"/>
                    <arg value="-quiet"/>
                    <arg value="-o7"/>
                    <arg value="-out"/>
                    <targetfile/>
                    <srcfile/>
                    <mapper type="identity"/>
                </apply>
            </then>
            <elseif>
                <os family="unix" />
                <then>
                    <echo message="*** optipng NOT INSTALLED. SKIPPING OPTIMIZATION OF PNGs." />
                    <echo message="*** Install optipng to enable png optimization." />
                    <echo message="*** For instructions see 'Dependencies' at: http://html5boilerplate.com/docs/#Build-script#dependencies" />
                </then>
            </elseif>
        </if>
  </target>

  <!-- Comment out console.log commands from merged script -->
  <target name="clean-js" description="Comment out console.log lines">
    <replaceregexp file="./template/js/minima-full.js" match="(console.log\(.*\))" replace="/\*\1\*/" flags="g" />
  </target>

  <!-- create the package -->
  <target name="pkg" depends="strip">
    <echo message="Building package.." />
    <mkdir dir="packages" />		
    <zip destfile="./packages/mod_mypanel.zip" basedir="../administrator/modules/mod_mypanel" />
    <zip destfile="./packages/mod_myshortcuts.zip" basedir="../administrator/modules/mod_myshortcuts" />
    <zip destfile="./packages/minima.zip" basedir="./template/" />
    <zip destfile="pkg_minima.zip">
    <fileset dir=".">
      <include name="packages/**" />
      <include name="manifest.xml" />
    </fileset>
    </zip>
  </target>

  <!-- FTP deploy, run separately -->
  <!--<target name="ftp">
    <ftp
    server="${_server}" 			
    userid="${_userid}" 
    password="${_password}"
    remotedir="${_remotedir}">
      <fileset dir=".">
        <include name="pkg_minima.zip" />			
      </fileset>
    </ftp>		
  </target>-->

</project>
